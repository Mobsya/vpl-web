{
	"help": {
		"fr": {
			"blocks": {
				"button 1": [
					"# Bouton simple",
					"![single button](vpl:block:button-1)",
					"Type: bloc d'événement ou de condition",
					"Comme bloc d'événement, le bloc _bouton simple_ active la règle lorsqu'on touche le bouton spécifié sur le Thymio.",
					"Comme bloc de condition, le bloc _bouton simple_ n'autorise l'activation de la règle que si l'on touche le bouton spécifié au moment où l'événement correspondant au 1er bloc à gauche survient."
				],
				"button": [
					"# Boutons multiples",
					"![button](vpl:block:button)",
					"Type: bloc d'événement ou de condition",
					"..."
				],
				"horiz prox": [
					"# Capteurs de proximité",
					"![Proximity sensors](vpl:block:horiz-prox)",
					"Type: bloc d'événement ou de condition",
					"Comme bloc d'événement, le bloc _capteurs de proximité_ active la règle lorsque les capteurs de proxoîmité spécifiés détectent un obstacle, ou l'absence d'obstacle, en réfléchissant plus qu'une certaine fraction de l'émission infrarouge. Toutes les conditions doivent être remplies simultanément; l'événement ne se produit qu'au moment où le dernier capteur spécifié détecte (ou ne détecte plus) un obstacle.",
					"Comme bloc de condition, le bloc _capteurs de proximité_ n'autorise l'activation de la règle que si les capteurs de proximité spécifiés détectent (ou pas) la présence d'un obstacle."
				],
				"horiz prox adv": [
					"# Capteurs de proximité avec seuils bas et haut",
					"![horiz prox adv](vpl:block:horiz-prox-adv)",
					"Type: bloc d'événement ou de condition",
					"..."
				],
				"horiz prox 1": [
					"# Capteurs de proximité avec seuil",
					"![horiz prox 1](vpl:block:horiz-prox-1)",
					"Type: bloc d'événement ou de condition",
					"..."
				],
				"ground": [
					"# Capteurs de réflexion sur le sol",
					"![ground](vpl:block:ground)",
					"Type: bloc d'événement ou de condition",
					"..."
				],
				"ground adv": [
					"# Capteurs de réflexion sur le sol avec seuils bas et haut",
					"![ground adv](vpl:block:ground-adv)",
					"Type: bloc d'événement ou de condition",
					"..."
				],
				"ground 1": [
					"# Capteurs de réflexion sur le sol avec seuil",
					"![ground 1](vpl:block:ground-1)",
					"Type: bloc d'événement ou de condition",
					"..."
				],
				"tap": [
					"# Détection de choc",
					"![tap](vpl:block:tap)",
					"Type: bloc d'événement ou de condition",
					"..."
				],
				"accelerometer": [
					"# Accéléromètre",
					"![accelerometer](vpl:block:accelerometer)",
					"Type: bloc d'événement ou de condition",
					"..."
				],
				"roll": [
					"# Angle de roulis",
					"![roll](vpl:block:roll)",
					"Type: bloc d'événement ou de condition",
					"..."
				],
				"pitch": [
					"# Angle de tangage",
					"![pitch](vpl:block:pitch)",
					"Type: bloc d'événement ou de condition",
					"..."
				],
				"yaw": [
					"# Angle de lacet",
					"![yaw](vpl:block:yaw)",
					"Type: bloc d'événement ou de condition",
					"..."
				],
				"clap": [
					"# Détection de son",
					"![clap](vpl:block:clap)",
					"Type: bloc d'événement ou de condition",
					"..."
				],
				"init": [
					"# Initialisation",
					"![init](vpl:block:init)",
					"Type: bloc d'événement ou de condition",
					"..."
				],
				"timer": [
					"# Minuterie",
					"![timer](vpl:block:timer)",
					"Type: bloc d'événement ou de condition",
					"..."
				],
				"remote control arrows": [
					"# remote control arrows",
					"![remote control arrows](vpl:block:remote-control-arrows)",
					"Type: bloc d'événement ou de condition",
					"..."
				],
				"state": [
					"# État (4 bits)",
					"![state](vpl:block:state)",
					"Type: bloc de condition",
					"..."
				],
				"state 8": [
					"# État (8 valeurs)",
					"![state 8](vpl:block:state-8)",
					"Type: bloc de condition",
					"..."
				],
				"counter comparison": [
					"# Comparaison du compteur",
					"![counter comparison](vpl:block:counter-comparison)",
					"Type: bloc de condition",
					"..."
				],
				"color state": [
					"# État (couleur)",
					"![color state](vpl:block:color-state)",
					"Type: bloc de condition",
					"..."
				],
				"color 8 state": [
					"# État (couleur)",
					"![color 8 state](vpl:block:color-8-state)",
					"Type: bloc de condition",
					"..."
				],
				"motor state": [
					"# Vitesses des moteurs",
					"![motor state](vpl:block:motor-state)",
					"Type: bloc de condition",
					"..."
				],
				"motor": [
					"# Change les vitesses des moteurs",
					"![Set motor speeds](vpl:block:motor)",
					"Type: bloc d'action",
					"Le bloc _change les vitesses des moteurs_ fixe la vitesse à atteindre pour les moteurs gauche et droit. La combinaison de vitesses permet d'avancer ou de reculer, de tourner et de s'arrêter."
				],
				"move": [
					"# Change le type de déplacement",
					"![move](vpl:block:move)",
					"Type: bloc d'action",
					"..."
				],
				"nn obstacles": [
					"# Réseau de neurones pour l'évitement d'obstacles",
					"![nn obstacles](vpl:block:nn-obstacles)",
					"Type: bloc d'action",
					"..."
				],
				"top color": [
					"# Change la couleur du dessus (composantes RVB)",
					"![top color](vpl:block:top-color)",
					"Type: bloc d'action",
					"..."
				],
				"top color 8": [
					"# Change la couleur du dessus",
					"![top color 8](vpl:block:top-color-8)",
					"Type: bloc d'action",
					"..."
				],
				"bottom color": [
					"# Change la couleur du dessous (composantes RVB)",
					"![bottom color](vpl:block:bottom-color)",
					"Type: bloc d'action",
					"..."
				],
				"bottom-left color": [
					"# Change la couleur du dessous à gauche (composantes RVB)",
					"![bottom-left color](vpl:block:bottom-left-color)",
					"Type: bloc d'action",
					"..."
				],
				"bottom-right color": [
					"# Change la couleur du dessous à droite (composantes RVB)",
					"![bottom-right color](vpl:block:bottom-right-color)",
					"Type: bloc d'action",
					"..."
				],
				"bottom color 8": [
					"# Change la couleur du dessous",
					"![bottom color 8](vpl:block:bottom-color-8)",
					"Type: bloc d'action",
					"..."
				],
				"bottom-left color 8": [
					"# Change la couleur du dessous à gauche",
					"![bottom-left color 8](vpl:block:bottom-left-color-8)",
					"Type: bloc d'action",
					"..."
				],
				"bottom-right color 8": [
					"# Change la couleur du dessous à droite",
					"![bottom-right color 8](vpl:block:bottom-right-color-8)",
					"Type: bloc d'action",
					"..."
				],
				"notes": [
					"# Joue une mélodie",
					"![notes](vpl:block:notes)",
					"Type: bloc d'action",
					"..."
				],
				"play": [
					"# Joue un fichier .wav",
					"![play](vpl:block:play)",
					"Type: bloc d'action",
					"..."
				],
				"play stop": [
					"# Arrête de jouer un fichier .wav",
					"![play stop](vpl:block:play-stop)",
					"Type: bloc d'action",
					"..."
				],
				"set state": [
					"# Change l'état (4 bits)",
					"![set state](vpl:block:set-state)",
					"Type: bloc d'action",
					"..."
				],
				"toggle state": [
					"# Inverse l'état (4 bits)",
					"![toggle state](vpl:block:toggle-state)",
					"Type: bloc d'action",
					"..."
				],
				"set state 8": [
					"# Change l'état (8 valeurs)",
					"![set state 8](vpl:block:set-state-8)",
					"Type: bloc d'action",
					"..."
				],
				"change state 8": [
					"# Passe à l'état suivant ou précédant (8 valeurs)",
					"![change state 8](vpl:block:change-state-8)",
					"Type: bloc d'action",
					"..."
				],
				"set counter": [
					"# Change le compteur",
					"![set counter](vpl:block:set-counter)",
					"Type: bloc d'action",
					"..."
				],
				"set timer": [
					"# Démarre la minuterie (0-4 sec)",
					"![set timer](vpl:block:set-timer)",
					"Type: bloc d'action",
					"..."
				],
				"set timer log": [
					"# Démarre la minuterie (0.1-10 sec)",
					"![set timer log](vpl:block:set-timer-log)",
					"Type: bloc d'action",
					"..."
				],
				"picture comment": [
					"# Commentaire (image)",
					"![picture comment](vpl:block:picture-comment)",
					"Type: block de commentaire",
					"..."
				]
			}
		}
	}
}
